name: Release a new version
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Version (e.g., 1.2.3)'
        required: true
        type: string
      next_version:
        description: 'Next Version (e.g., 1.2.4 or skip)'
        required: true
        type: string

env:
  LC_ALL: "en_US.UTF-8"

jobs:
  release-and-tag:
    if: github.repository == 'line/centraldogma-python'
    runs-on: ubuntu-latest

    steps:
      - name: Validate inputs
        run: |
          if [[ ! "${{ inputs.release_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: 'release_version' should be in SemVer format."
            exit 1
          fi
          if [[ ! "${{ inputs.next_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: 'next_version' should be in SemVer format."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Import GPG key for signing commits and tags
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Configure Git user
        run: |
          git config user.name "${{ steps.import_gpg.outputs.name }}"
          git config user.email "${{ steps.import_gpg.outputs.email }}"

      - name: Run release script
        id: run_release
        env:
          RELEASE_VERSION: ${{ inputs.release_version }}
          NEXT_VERSION: ${{ inputs.next_version }}
        run: |
          python .github/scripts/release.py
